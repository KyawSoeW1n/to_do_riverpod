// Mocks generated by Mockito 5.3.2 from annotations
// in to_do/test/mock/data/task_database_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:to_do/data/datasource/task_db_source.dart' as _i2;
import 'package:to_do/domain/model/task.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TaskDBSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskDBSource extends _i1.Mock implements _i2.TaskDBSource {
  @override
  _i3.Future<void> createTask(List<_i4.Task>? taskList) => (super.noSuchMethod(
        Invocation.method(
          #createTask,
          [taskList],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.Task>> getTaskList() => (super.noSuchMethod(
        Invocation.method(
          #getTaskList,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Task>>.value(<_i4.Task>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Task>>.value(<_i4.Task>[]),
      ) as _i3.Future<List<_i4.Task>>);
}
